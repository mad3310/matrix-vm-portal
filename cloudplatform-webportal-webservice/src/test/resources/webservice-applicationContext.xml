<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd" >
	<!-- Configurer that replaces ${...} placeholders with values from properties 
		files -->
	<!-- <context:property-placeholder location="file:///${CATALINA_HOME}/app/config/tvos/application.properties,file:///${CATALINA_HOME}/app/config/tvos/jdbc.properties" 
		/> -->
	<import resource="classpath:converter-applicationContext.xml"/>
	
	<import resource="classpath*:data-applicationContext.xml"/>
	
	<context:component-scan base-package="com.letv" />
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations">
		    <list> 
			    <value>classpath:jdbc.properties</value>
			    <value>classpath:config.properties</value> 
		    </list> 
	    </property>
    </bean>


     <!-- 异常处理 -->
    <bean id="exceptionResolver" class="com.letv.common.spring.DefaultMappingExceptionResolver" />
    
    
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>  
	
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="jsonView"
	    class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" >
	    <property name="contentType" value="application/json;charset=UTF-8"/>
	</bean>
	
	<!-- Register JSON Converter for RESTful Web Service -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <bean
	                class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	            </bean>
	        </list>
	    </property>
	</bean>

	<!--  
	<bean id="followApi" class="com.letv.yuanxian.api.FollowApi">
		<property name="saleDataService" ref="saleDataService" />
	</bean>
	-->

	<!-- 下面的两个bean主要是为了在api接口开发过程中测试用来访问验证,或是第三方获取借口数据用的,会将 返回数据按照用户的访问后缀自动转换成用户想要的数据格式，如json或xml -->
	<!-- jaxb2marshaller主要是spring用来处理xml的一种解决方案,这种解决方案是官方的,因此在xml支持程度上会比较好 这里的list里的value主要是标识在处理xml格式时，什么样儿的model使用，这样在遇到这些model时，spring才会自动为你 
		转换成xml格式。 -->
	<!-- <bean id="common.jaxb2marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				
				<value>com.letv.yuanxian.api.response.AfterSaleFollowResponse</value>
				<value>com.letv.yuanxian.api.response.AfterSaleFollowResponseList</value>
				<value>com.letv.yuanxian.api.response.TestResponse</value>
			</list>
		</property>
	</bean>
 -->
 
 <!-- 配置RestTemplate -->
     <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">  
     	<property name="messageConverters">
     		<list>
     			<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean id="formHttpMessageConverter" class="org.springframework.http.converter.FormHttpMessageConverter"/>
				<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
   			</list>
   		</property>
     </bean>
</beans>





